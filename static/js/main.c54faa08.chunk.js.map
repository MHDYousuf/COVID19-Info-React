{"version":3,"sources":["components/Header.module.scss","api/AppReducer.js","api/fetchData.js","components/Header.js","components/Globe.js","utils/format.js","components/Cards.js","App.js","index.js"],"names":["module","exports","state","action","type","loading","timeline","payload","countryData","error","instanceData","axios","create","baseURL","headers","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","get","res","data","response","console","log","Provider","value","getCountryDetails","getTimelineDetails","HeaderItem","className","styles","brandContainer","brandHeading","Dev","devContainer","role","href","rel","target","Header","props","am4core","am4themes_animated","Globe","matches","useMediaQuery","useContext","useState","countryDetails","setCountryDetails","useEffect","chart","am4maps","hiddenState","properties","opacity","geodata","am4geodata_worldLow","projection","Orthographic","panBehavior","deltaLatitude","padding","polygonSeries","series","push","polygonTemplate","mapPolygons","template","tooltipHTML","heatRules","property","min","max","fill","stroke","strokeWidth","useGeodata","heatLegend","chartContainer","createChild","handleHover","mapPolygon","isNaN","dataItem","valueAxis","hideTooltip","showTooltipAt","valign","align","width","marginRight","background","fillOpacity","orientation","renderer","labels","fontSize","minGridDistance","events","on","event","strokeOpacity","zoomControl","animation","graticuleSeries","mapLines","line","fitExtent","backgroundSeries","polygon","states","brighten","map","id","population","deathrate","death_rate","recoveryrate","recovery_rate","today","deaths","confirmed","total_death","exclude","trigger","setTimeout","animate","to","seriesContainer","stop","start","dispose","clearTimeout","length","getValues","latest_data","calculated","toFixed","name","code","newValue","style","height","numberWithCommas","x","toString","replace","useStyles","makeStyles","cardContainer","display","flexDirection","absolutePos","position","bottom","root","minWidth","margin","borderBottom","title","textTransform","color","pos","marginBottom","badge","transform","red","orange","green","Cards","current","new","new_deaths","date","updated_at","new_confirmed","recovered","new_recovered","classes","Grid","clx","Box","pt","Skeleton","undefined","CardComponent","colors","defaultProps","Typography","variant","component","BadgeComponent","xs","item","Card","CardContent","Badge","badgeContent","Divider","Date","toTimeString","toDateString","theme","justifyContent","minHeight","placeholder","App","query","setQuery","timerRef","useRef","Fade","in","transitionDelay","unmountOnExit","CircularProgress","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c54faa08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"brandContainer\":\"Header_brandContainer__wl7Z_\",\"brandHeading\":\"Header_brandHeading__1R9s9\",\"devContainer\":\"Header_devContainer__AZa8i\"};","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"GET_TIMELINE_DETAILS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        timeline: action.payload,\r\n      };\r\n    case \"GET_COUNTRY_WITH_TIMELINE_DETAILS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        countryData: action.payload,\r\n      };\r\n    case \"RECEIVED_ERROR\":\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nconst instanceData = axios.create({\r\n  baseURL: \"https://corona-api.com/\",\r\n\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n\r\n//Initial State\r\nconst initialState = {\r\n  countryData: [],\r\n  timeline: [],\r\n  error: null,\r\n  loading: true,\r\n};\r\n\r\n//Create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  //Actions\r\n  async function getTimelineDetails() {\r\n    try {\r\n      const res = await instanceData.get(\"timeline\");\r\n      dispatch({\r\n        type: \"GET_TIMELINE_DETAILS\",\r\n        payload: res.data.data[0],\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: \"RECEIVED_ERROR\",\r\n        payload: err.response.data.error,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function getCountryDetails() {\r\n    try {\r\n      const res = await instanceData.get(\"countries?include=timeline\");\r\n      dispatch({\r\n        type: \"GET_COUNTRY_WITH_TIMELINE_DETAILS\",\r\n        payload: res.data.data,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch({\r\n        type: \"RECEIVED_ERROR\",\r\n        payload: err.response.data.error,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        countryData: state.countryData,\r\n        timeline: state.timeline,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        getCountryDetails,\r\n        getTimelineDetails,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Header.module.scss\";\r\nfunction Header(props) {\r\n  return (\r\n    <div>\r\n      <Dev />\r\n      <HeaderItem />\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction HeaderItem() {\r\n  return (\r\n    <div className={styles.brandContainer}>\r\n      <h1 className={styles.brandHeading}>\r\n        C<span>O</span>VID 19\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\nfunction Dev() {\r\n  return (\r\n    <div className={styles.devContainer}>\r\n      <span>\r\n        with <span role=\"img\">💕</span> by{\" \"}\r\n        <a\r\n          href=\"https://www.linkedin.com/in/mhdyousuf97/\"\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n        >\r\n          MHDYousuf\r\n        </a>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\n// import * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\r\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { GlobalContext } from \"../api/fetchData\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nfunction Globe() {\r\n  const matches = useMediaQuery(\"(max-width:998px)\");\r\n  const { countryData, getCountryDetails } = useContext(GlobalContext);\r\n  const [countryDetails, setCountryDetails] = useState([]);\r\n  useEffect(() => {\r\n    getCountryDetails();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let chart = am4core.create(\"chartdiv\", am4maps.MapChart);\r\n    chart.hiddenState.properties.opacity = 0; // this creates initial fade-in\r\n    //Set map definition\r\n    chart.geodata = am4geodata_worldLow;\r\n\r\n    // const countries = am4geodata_worldLow.features.map(\r\n    //   ({ properties }) => properties\r\n    // );\r\n\r\n    // console.log(countries.map(({ name }) => name));\r\n\r\n    //Set Projection\r\n    chart.projection = new am4maps.projections.Orthographic();\r\n    chart.panBehavior = \"rotateLongLat\";\r\n    chart.deltaLatitude = -20;\r\n    chart.padding(40, 40, 40, 40);\r\n\r\n    //Create map polygon series\r\n    var polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n\r\n    //Configure series\r\n    var polygonTemplate = polygonSeries.mapPolygons.template;\r\n    polygonTemplate.tooltipHTML = `<h4>{name}</h4>\r\n    <p>Total Deaths: {value}</p>\r\n    <hr />\r\n    <p>Population: {data.population}</p>\r\n    <p>Death-rate(%): {data.deathrate}</p>\r\n    <p>Recovery-rate(%): {data.recoveryrate}</p>\r\n    <hr />\r\n    <h5>today</h5>\r\n    <p>&emsp;Deaths: {data.today.deaths}</p>\r\n    <p>&emsp;Confirmed: {data.today.confirmed}</p>\r\n    `;\r\n\r\n    //MHD\r\n    polygonSeries.heatRules.push({\r\n      property: \"fill\",\r\n      target: polygonTemplate,\r\n      min: am4core.color(\"#5085c7\"),\r\n      max: am4core.color(\"#1b3f6b\"),\r\n    });\r\n\r\n    //blah finished\r\n\r\n    polygonTemplate.fill = am4core.color(\"#fff\");\r\n    polygonTemplate.stroke = am4core.color(\"#000\");\r\n    polygonTemplate.strokeWidth = 0.5;\r\n\r\n    // Make map load polygon (like country names) data from GeoJSON\r\n    polygonSeries.useGeodata = true;\r\n\r\n    //MHD\r\n    // add heat legend\r\n    var heatLegend = chart.chartContainer.createChild(am4maps.HeatLegend);\r\n    heatLegend.valign = \"bottom\";\r\n    heatLegend.align = \"right\";\r\n    heatLegend.width = am4core.percent(100);\r\n    heatLegend.series = polygonSeries;\r\n    if (!matches) heatLegend.marginRight = 40;\r\n    heatLegend.background.fill = am4core.color(\"#000\");\r\n    heatLegend.background.fillOpacity = 0.05;\r\n    heatLegend.orientation = matches ? \"horizontal\" : \"vertical\";\r\n    heatLegend.padding(5, 5, 5, 5);\r\n    heatLegend.valueAxis.renderer.labels.template.fill = \"#bddbff\";\r\n    heatLegend.valueAxis.renderer.labels.template.fontSize = 12;\r\n    heatLegend.valueAxis.renderer.minGridDistance = 40;\r\n\r\n    polygonSeries.mapPolygons.template.events.on(\"over\", (event) => {\r\n      handleHover(event.target);\r\n    });\r\n\r\n    polygonSeries.mapPolygons.template.events.on(\"hit\", (event) => {\r\n      handleHover(event.target);\r\n    });\r\n\r\n    function handleHover(mapPolygon) {\r\n      if (!isNaN(mapPolygon.dataItem.value)) {\r\n        heatLegend.valueAxis.showTooltipAt(mapPolygon.dataItem.value);\r\n      } else {\r\n        heatLegend.valueAxis.hideTooltip();\r\n      }\r\n    }\r\n    polygonSeries.mapPolygons.template.strokeOpacity = 0.4;\r\n    polygonSeries.mapPolygons.template.events.on(\"out\", (event) => {\r\n      heatLegend.valueAxis.hideTooltip();\r\n    });\r\n\r\n    //MHD\r\n\r\n    //Blah finished\r\n\r\n    chart.zoomControl = new am4maps.ZoomControl();\r\n    chart.zoomControl.valign = \"top\";\r\n\r\n    //blah finished\r\n\r\n    var graticuleSeries = chart.series.push(new am4maps.GraticuleSeries());\r\n    graticuleSeries.mapLines.template.line.stroke = am4core.color(\"#fffff\");\r\n    graticuleSeries.mapLines.template.line.strokeOpacity = 0.02;\r\n    graticuleSeries.fitExtent = false;\r\n\r\n    //Water\r\n    chart.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color(\r\n      \"#bddbff\"\r\n    );\r\n    chart.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 1;\r\n\r\n    //Create hover state and set alternative fill color\r\n    var hs = polygonTemplate.states.create(\"hover\");\r\n    hs.properties.fill = am4core.color(\"#1b3f6b\").brighten(-0.2);\r\n\r\n    polygonSeries.data = countryDetails.map((value) => {\r\n      return {\r\n        id: value.id,\r\n        data: {\r\n          population: value.population,\r\n          deathrate: value.death_rate,\r\n          recoveryrate: value.recovery_rate,\r\n          today: {\r\n            deaths: value.today.deaths,\r\n            confirmed: value.today.confirmed,\r\n          },\r\n        },\r\n        value: value.total_death,\r\n      };\r\n    });\r\n    // excludes Antarctica\r\n    polygonSeries.exclude = [\"AQ\"];\r\n\r\n    //Rotation function\r\n    let animation;\r\n    const trigger = () =>\r\n      setTimeout(function () {\r\n        animation = chart.animate(\r\n          { property: \"deltaLongitude\", to: 100000 },\r\n          8000000\r\n        );\r\n      }, 3000);\r\n    trigger();\r\n    chart.seriesContainer.events.on(\"down\", function () {\r\n      if (animation) {\r\n        animation.stop();\r\n      } else {\r\n        animation.start();\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      chart.dispose();\r\n      clearTimeout(trigger);\r\n    };\r\n  }, [countryDetails.length !== 0]);\r\n\r\n  useEffect(() => {\r\n    if (countryData.length > 0) {\r\n      let getValues = countryData.map((value) => {\r\n        let deathrate = value.latest_data.calculated.death_rate;\r\n        if (deathrate !== null)\r\n          deathrate = value.latest_data.calculated.death_rate.toFixed(3);\r\n        else deathrate = 0;\r\n        let recoveryrate = value.latest_data.calculated.recovery_rate;\r\n        if (recoveryrate !== null)\r\n          recoveryrate = value.latest_data.calculated.recovery_rate.toFixed(3);\r\n        else recoveryrate = 0;\r\n        return {\r\n          name: value.name,\r\n          id: value.code,\r\n          population: value.population,\r\n          total_death: value.latest_data.deaths,\r\n          death_rate: deathrate,\r\n          recovery_rate: recoveryrate,\r\n          today: {\r\n            deaths: value.today.deaths,\r\n            confirmed: value.today.confirmed,\r\n          },\r\n        };\r\n      });\r\n      setCountryDetails((newValue) => (newValue = getValues));\r\n    }\r\n  }, [countryData]);\r\n\r\n  return <div id=\"chartdiv\" style={{ width: \"100%\", height: \"100vh\" }}></div>;\r\n}\r\n\r\nexport default Globe;\r\n","export function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"../api/fetchData\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  useMediaQuery,\r\n  Badge,\r\n  Divider,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport { numberWithCommas } from \"../utils/format\";\r\nimport clx from \"classnames\";\r\nconst useStyles = makeStyles({\r\n  cardContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: \"1.5rem\",\r\n  },\r\n  absolutePos: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n  },\r\n  root: {\r\n    minWidth: 220,\r\n    margin: \"0.5rem\",\r\n    borderBottom: \"var(--border-bottom)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    textTransform: \"uppercase\",\r\n    color: \"var(--color)\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  badge: {\r\n    \"& span\": {\r\n      transform: \"scale(1) translate(100%, 0%)\",\r\n      background: \"var(--background)\",\r\n    },\r\n  },\r\n});\r\n\r\nconst red = {\r\n  \"--background\": \"#e74c3c\",\r\n  \"--color\": \"#e74c3c\",\r\n  \"--border-bottom\": \"5px solid #e74c3c\",\r\n};\r\nconst orange = {\r\n  \"--background\": \"#f39c12\",\r\n  \"--color\": \"#f39c12\",\r\n  \"--border-bottom\": \"5px solid #f39c12\",\r\n};\r\nconst green = {\r\n  \"--background\": \"#2ecc71\",\r\n  \"--color\": \"#2ecc71\",\r\n  \"--border-bottom\": \"5px solid #2ecc71\",\r\n};\r\n\r\nexport default function Cards() {\r\n  const { timeline, getTimelineDetails } = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    getTimelineDetails();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const deaths = {\r\n    title: \"Death\",\r\n    current: timeline.deaths,\r\n    new: timeline.new_deaths,\r\n    date: timeline.updated_at,\r\n  };\r\n  const confirmed = {\r\n    title: \"Confirmed\",\r\n    current: timeline.confirmed,\r\n    new: timeline.new_confirmed,\r\n    date: timeline.updated_at,\r\n  };\r\n  const recovered = {\r\n    title: \"Recovered\",\r\n    current: timeline.recovered,\r\n    new: timeline.new_recovered,\r\n    date: timeline.updated_at,\r\n  };\r\n  const matches = useMediaQuery(\"(max-width:998px)\");\r\n  const classes = useStyles();\r\n  if (timeline.length === 0) {\r\n    return (\r\n      <Grid\r\n        className={\r\n          matches\r\n            ? classes.cardContainer\r\n            : clx(classes.cardContainer, classes.absolutePos)\r\n        }\r\n      >\r\n        <Box pt={0.5}>\r\n          <Skeleton />\r\n          <Skeleton width=\"60%\" />\r\n        </Box>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <Grid\r\n      className={\r\n        matches\r\n          ? classes.cardContainer\r\n          : clx(classes.cardContainer, classes.absolutePos)\r\n      }\r\n    >\r\n      {deaths.current === undefined ? (\r\n        <Box pt={0.5}>\r\n          <Skeleton />\r\n          <Skeleton width=\"60%\" />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <CardComponent classes={classes} colors={red} data={deaths} />\r\n          <CardComponent classes={classes} colors={orange} data={confirmed} />\r\n          <CardComponent classes={classes} colors={green} data={recovered} />\r\n        </>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction CardComponent({ classes, data, colors }) {\r\n  const [color, setColor] = useState(colors);\r\n  const defaultProps = {\r\n    color: \"secondary\",\r\n    children: (\r\n      <Typography variant=\"h5\" component=\"h2\">\r\n        {numberWithCommas(data.current)}\r\n      </Typography>\r\n    ),\r\n  };\r\n  const BadgeComponent = () => (\r\n    <>\r\n      {numberWithCommas(data.new)}\r\n      <ArrowUpwardIcon style={{ fontSize: \"0.8rem\" }} />\r\n    </>\r\n  );\r\n  return (\r\n    <Grid xs={12} item style={{ margin: \"auto\" }}>\r\n      <Card className={clx(classes.root)} style={color} variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography className={clx(classes.title)} style={color}>\r\n            {data.title}\r\n          </Typography>\r\n          <Badge\r\n            className={classes.badge}\r\n            style={color}\r\n            badgeContent={<BadgeComponent />}\r\n            max={9999}\r\n            {...defaultProps}\r\n          />\r\n          <Divider />\r\n          <Typography variant=\"caption\">Last Updated:</Typography>\r\n          <Typography variant=\"overline\" component=\"p\">\r\n            {new Date(data.date).toTimeString()}\r\n          </Typography>\r\n          <Typography variant=\"overline\">\r\n            {new Date(data.date).toDateString()}{\" \"}\r\n          </Typography>\r\n        </CardContent>\r\n        {/* <CardActions>\r\n          <Button size=\"small\">Learn More</Button>\r\n        </CardActions> */}\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Fade, CircularProgress } from \"@material-ui/core\";\nimport { GlobalProvider } from \"./api/fetchData\";\nimport Header from \"./components/Header\";\nimport Globe from \"./components/Globe\";\nimport Cards from \"./components/Cards\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    margin: \"auto\",\n    justifyContent: \"center\",\n    minHeight: \"100vh\",\n  },\n  placeholder: {\n    margin: \"auto\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [query, setQuery] = useState(\"idle\");\n  const timerRef = useRef();\n\n  useEffect(() => {\n    setQuery(\"progress\");\n    timerRef.current = setTimeout(() => {\n      setQuery(\"success\");\n    }, 4000);\n    return () => {\n      clearTimeout(timerRef);\n    };\n  }, []);\n\n  return (\n    <>\n      {query === \"success\" ? (\n        <GlobalProvider>\n          <div\n            className=\"App\"\n            style={{ background: \"linear-gradient(to left, #000000, #003566)\" }}\n          >\n            <Header>\n              <section>\n                <Globe />\n                <Cards />\n              </section>\n            </Header>\n          </div>\n        </GlobalProvider>\n      ) : (\n        <div className={classes.root}>\n          <div className={classes.placeholder}>\n            <Fade\n              in={query === \"progress\"}\n              style={{\n                transitionDelay: query === \"progress\" ? \"800ms\" : \"0ms\",\n              }}\n              unmountOnExit\n            >\n              <CircularProgress />\n            </Fade>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\n// const RenderingComponent = ({ query }, ref) => {\n//   return (\n//     <div\n//       style={{\n//         display: \"flex\",\n//         margin: \"auto\",\n//         justifyContent: \"center\",\n//         alignItems: \"center\",\n//         textAlign: \"center\",\n//         height: \"100vh\",\n//         width: \"100vw\",\n//       }}\n//     >\n//       <Fade\n//         in={query === \"progress\"}\n//         style={{\n//           transitionDelay: query === \"progress\" ? \"200ms\" : \"0ms\",\n//         }}\n//         unmountOnExit\n//       >\n//         <CircularProgress />\n//       </Fade>\n//     </div>\n//   );\n// };\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}